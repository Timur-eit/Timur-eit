{"version":3,"sources":["shared/img/main_picture.jpg","components/Intro/index.tsx","components/Skills/index.tsx","components/WorksList/index.tsx","components/Contacts/index.tsx","data/contactsData.ts","shared/img/contact_email.svg","shared/img/contact_telegram.svg","shared/img/contact_github.svg","shared/img/contact_hh.png","shared/img/contact_vk.svg","data/skillsList.ts","shared/img/works_agile-pdu.png","shared/img/works_webhelp.png","shared/img/works_chat.png","shared/img/works_table.png","shared/img/works_ui-comps.png","shared/img/whack-a-mole.png","shared/img/works_pokemons.png","shared/img/works_gradient.png","shared/img/works_portfolio.png","shared/img/works_brain-games.png","shared/img/works_js-samples.png","shared/img/works_applicant-form.png","data/projectDescriptionData.tsx","data/worksList.ts","App.tsx","components/WorksList/ProjectDescription/index.tsx","index.tsx"],"names":["Intro","className","id","src","mainPicture","alt","Skills","props","skillsList","map","item","WorkList","worklist","Object","keys","imgSrc","altText","title","generalDescription","to","path","Contacts","contactList","contact","href","linkPath","target","rel","text","myContactList","email","telegram","gitHub","headHunter","vk","projectDescription","agilePdu","general","main","portfolio","applicantForm","webHelp","chat","dataTable","uiComponents","whackAMole","pokemons","gradient","brainGames","jsSamples","myWorksList","agilePduImg","this","mainDescription","projectUrl","isSrcLink","srcCodeUrl","portfolioImg","applicantFormImg","webHelpMenuImg","chatImg","dataTableImg","uiCompsImg","whackAMoleImg","pockemonsImg","gradientImg","brainGamesImg","jsSamplesImg","App","WorksList","worksList","ProjectDescription","img","desciption","history","React","useMemo","createBrowserHistory","onClick","back","ReactDOM","render","StrictMode","exact","document","getElementById"],"mappings":"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","file":"static/js/main.aa0d688e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main_picture.5736ef43.jpg\";","import mainPicture from 'shared/img/main_picture.jpg';\nimport './style.scss';\n\nfunction Intro() {\n    return (\n        <>\n            <div className=\"intro-question\" id=\"intro\">\n                <h1>Are you looking for a Frontend Developer?</h1>\n            </div>\n            <div className=\"intro\">\n                <div className=\"intro__content\">\n                    <h1>Evgeny Tsygankov</h1>\n                    <h2>Frontend Developer</h2>\n                    <img src={mainPicture} className=\"main-picture\" alt=\"me\" />\n                    <p>\n                        Hello, I focused on logistics for 10 years, then I met\n                        programming and fell in love to this activity, to the\n                        point, that I became a programmer. I write in JS, tried\n                        some Python, Haskell, Kotlin, C++. I sincerely love\n                        programming and I want to progress in this area.\n                    </p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Intro;\n","import './style.scss';\nimport React, { Fragment } from 'react';\n\ninterface ISkillsProps {\n    skillsList: string[];\n}\n\nfunction Skills(props: ISkillsProps) {\n    const { skillsList } = props;\n\n    return (\n        <div className=\"skills\">\n            <h2>My hard skills</h2>\n            <div className=\"skills__window\">\n                <div className=\"window__header\">\n                    <div className=\"window_control-panel\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n\n                <div className=\"window__content\">\n                    <pre>\n                        <code>\n                            <span>&lt;ul&gt;</span>\n                            <br />\n                            {skillsList.map((item) => {\n                                return (\n                                    <Fragment key={item}>\n                                        &nbsp;&nbsp;<span>&lt;li&gt;</span>\n                                        {item}\n                                        <span>&lt;/li&gt;</span>\n                                        <br />\n                                    </Fragment>\n                                );\n                            })}\n                            <span>&lt;/ul&gt;</span>\n                            <br />\n                        </code>\n                    </pre>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Skills;\n","import './style.scss';\n// import {myWorksList} from '../../data/worksList'\nimport { IMyWorksList } from 'data/worksList';\nimport { Link } from 'react-router-dom';\n\ninterface IWorkListProps {\n    worklist: IMyWorksList;\n}\n\nfunction WorkList(props: IWorkListProps) {\n    const { worklist } = props;\n    return (\n        <div className=\"workslist-container\">\n            <h2>List of my works</h2>\n            <div className=\"list\">\n                {Object.keys(worklist).map((item) => {\n                    return (\n                        <div key={worklist[item].title} className=\"list__item\">\n                            <div className=\"list__item__description\">\n                                <img\n                                    src={worklist[item].imgSrc}\n                                    alt={worklist[item].altText()}\n                                />\n                                <h3>{worklist[item].title}</h3>\n                                <p>{worklist[item].generalDescription}</p>\n                            </div>\n                            <Link to={worklist[item].path}>View</Link>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default WorkList;\n","import './style.scss';\nimport { IMyContactList } from 'data/contactsData';\n\ninterface IContactsProps {\n    contactList: IMyContactList;\n}\n\nfunction Contacts(props: IContactsProps) {\n    const { contactList } = props;\n\n    return (\n        <div className=\"contacts-container\">\n            <h2>where you can find me</h2>\n            <div>\n                {Object.keys(contactList).map((contact) => {\n                    return (\n                        <a\n                            key={contact}\n                            href={contactList[contact].linkPath}\n                            className=\"contacts-item\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <p>{contactList[contact].text}</p>\n                            <img\n                                src={contactList[contact].imgSrc}\n                                alt={contactList[contact].altText}\n                            />\n                        </a>\n                    );\n                })}\n            </div>\n            <a href=\"#intro\" className=\"back-home\">\n                back to top\n            </a>\n        </div>\n    );\n}\n\nexport default Contacts;\n","import emailImg from 'shared/img/contact_email.svg';\nimport telegramImg from 'shared/img/contact_telegram.svg';\nimport githubImg from 'shared/img/contact_github.svg';\nimport headHunterImg from 'shared/img/contact_hh.png';\nimport vkImg from 'shared/img/contact_vk.svg';\n\nexport interface IMyContactList {\n    [contactMethodName: string]: {\n        text: string;\n        imgSrc: string;\n        linkPath: string;\n        altText: string;\n    };\n}\n\nexport const myContactList: IMyContactList = {\n    email: {\n        text: 'You can write me an email',\n        imgSrc: emailImg,\n        linkPath: 'mailto:evtsyga@gmail.com',\n        altText: 'Email',\n    },\n    telegram: {\n        text: 'Or you can write me in Telegram',\n        imgSrc: telegramImg,\n        linkPath: 'tg://resolve?domain=timur_eit',\n        altText: 'Telegram',\n    },\n    gitHub: {\n        text: 'You can also visit my GitHub account',\n        imgSrc: githubImg,\n        linkPath: 'https://github.com/Timur-eit',\n        altText: 'GitHub',\n    },\n    headHunter: {\n        text: 'And my HeadHunter account',\n        imgSrc: headHunterImg,\n        linkPath:\n            'https://spb.hh.ru/resume/e9fad3c9ff08089fc00039ed1f6c3872725230',\n        altText: 'HeadHunter',\n    },\n    vk: {\n        text: 'To know a bit more about me you can visit my VK page',\n        imgSrc: vkImg,\n        linkPath: 'https://vk.com/timur_eit',\n        altText: 'VK',\n    },\n};\n","export default __webpack_public_path__ + \"static/media/contact_email.564e7ee8.svg\";","export default __webpack_public_path__ + \"static/media/contact_telegram.28141391.svg\";","export default __webpack_public_path__ + \"static/media/contact_github.255db585.svg\";","export default __webpack_public_path__ + \"static/media/contact_hh.d0cc35f3.png\";","export default __webpack_public_path__ + \"static/media/contact_vk.9b94b90c.svg\";","const skillsList: string[] = [\n    'JavaScript',\n    'TypeScript',\n    'ReactJS (Hooks)',\n    'Redux',\n    'Jest',\n    'SASS',\n    'Webpack',\n    'macOS',\n    'Ubuntu',\n];\n\nexport default skillsList;\n","export default __webpack_public_path__ + \"static/media/works_agile-pdu.17f21064.png\";","export default __webpack_public_path__ + \"static/media/works_webhelp.491b5644.png\";","export default __webpack_public_path__ + \"static/media/works_chat.d8d13c5f.png\";","export default __webpack_public_path__ + \"static/media/works_table.35a60dff.png\";","export default __webpack_public_path__ + \"static/media/works_ui-comps.94bec307.png\";","export default __webpack_public_path__ + \"static/media/whack-a-mole.9a971aca.png\";","export default __webpack_public_path__ + \"static/media/works_pokemons.02c6aa7e.png\";","export default __webpack_public_path__ + \"static/media/works_gradient.449302dd.png\";","export default __webpack_public_path__ + \"static/media/works_portfolio.c1a1f8f0.png\";","export default __webpack_public_path__ + \"static/media/works_brain-games.06dfb41e.png\";","export default __webpack_public_path__ + \"static/media/works_js-samples.69c2227d.png\";","export default __webpack_public_path__ + \"static/media/works_applicant-form.c6d9d707.png\";","import React from 'react';\n\ninterface IProjectDescription {\n    [projectName: string]: {\n        general: string;\n        main: React.ReactElement<string>;\n    };\n}\n\nexport const projectDescription: IProjectDescription = {\n    agilePdu: {\n        general: 'Online store of electrical goods',\n        main: (\n            <>\n                <p>\n                    Online store landing page. Mobile and desktop views. Most of\n                    the data is processed on the front-end side. The cart is\n                    stored in the local storage of the browser. The order form\n                    is implemented using Express.js, a small web server\n                    framework and Nodemailer, a module that allows application\n                    to send form data to store employees.\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>Vanilla JS</li>\n                    <li>Webpack</li>\n                    <li>SASS</li>\n                    <li>Express.js</li>\n                    <li>Nodemailer</li>\n                </ul>\n            </>\n        ),\n    },\n    portfolio: {\n        general: 'My current portfolio website',\n        main: (\n            <>\n                <p>\n                    My current portfolio site. Created to help me find the\n                    perfect job offer.\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>TypeScript</li>\n                    <li>React (Create React App)</li>\n                    <li>React Router</li>\n                    <li>SASS</li>\n                    <li>MATERIAL-UI</li>\n                </ul>\n            </>\n        ),\n    },\n    applicantForm: {\n        general: 'Expandable applicant form',\n        main: (\n            <>\n                <p>\n                    Client-side validation form (including for email format and maximum file size)\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>TypeScript</li>\n                    <li>React</li>\n                    <li>Redux</li>\n                    <li>Formik</li>\n                    <li>React Bootstrap</li>\n                </ul>\n            </>\n        ),\n    },\n    webHelp: {\n        general: 'Webhelp Menu',\n        main: (\n            <>\n                <p>\n                    This is a web help menu for navigating some technical\n                    documentation. This is a test assignment given to me by one\n                    of my fellow developers to train and improve my skills.\n                    Navigation is possible using both the mouse and the\n                    keyboard.\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>React JS (Create React App)</li>\n                    <li>Redux</li>\n                    <li>SASS</li>\n                    <li>Mousetrap</li>\n                    <li>Jest</li>\n                </ul>\n            </>\n        ),\n    },\n    chat: {\n        general: 'Web chat',\n        main: (\n            <>\n                <p>Web chat implemented with sockets.io</p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <p>Backend:</p>\n                    <li>TypeScript (Node.js)</li>\n                    <li>ExpressJS</li>\n                    <li>Socket.IO</li>\n                    <p>Frontend:</p>\n                    <li>ReactJS</li>\n                    <li>TypeScript</li>\n                    <li>Material-UI</li>\n                    <li>SASS</li>\n                    <li>socket.io-client</li>\n                </ul>\n            </>\n        ),\n    },\n    dataTable: {\n        general: 'Data table',\n        main: (\n            <>\n                <p>\n                    A small web application for reading and formatting some\n                    data. The default data is fetched from a JSON file, after\n                    which you can add, format, and delete your own data stored\n                    in browser cookies.\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>React JS</li>\n                    <li>Redux</li>\n                    <li>SASS</li>\n                    <li>Jest</li>\n                    <li>Puppeteer</li>\n                </ul>\n            </>\n        ),\n    },\n    uiComponents: {\n        general: 'Some sample UI components',\n        main: (\n            <>\n                <p>Some sample UI components written with ReactJS</p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>React JS (Hooks)</li>\n                    <li>CSS</li>\n                </ul>\n            </>\n        ),\n    },\n    whackAMole: {\n        general: 'Fun simple browser game whack-a-mole',\n        main: (\n            <>\n                <p>Browser game whack-a-mole</p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>Vanilla JS</li>\n                    <li>HTML + CSS</li>\n                </ul>\n            </>\n        ),\n    },\n    pokemons: {\n        general: 'Task for learning React hooks',\n        main: (\n            <>\n                <p>The first steps of my learning React</p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>ReactJS</li>\n                    <li>CSS</li>\n                </ul>\n            </>\n        ),\n    },\n    gradient: {\n        general: 'Task for learning React hooks',\n        main: (\n            <>\n                <p>The first steps of my learning React</p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>ReactJS</li>\n                    <li>CSS</li>\n                </ul>\n            </>\n        ),\n    },\n    brainGames: {\n        general: 'Simple arithmetic CLI games',\n        main: (\n            <>\n                <p>\n                    Education project. Mini-games for CLI. That what my start of\n                    learning JS.\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>CLI (POSIX)</li>\n                    <li>Node.js</li>\n                </ul>\n            </>\n        ),\n    },\n    jsSamples: {\n        general: 'Some samples of JS code',\n        main: (\n            <>\n                <p>\n                    {/* Education project. Mini-games for CLI. That what my start of learning JS. */}\n                </p>\n                <ul>\n                    <p>List of technologies used:</p>\n                    <li>JavaScript</li>\n                </ul>\n            </>\n        ),\n    },\n};\n","import agilePduImg from 'shared/img/works_agile-pdu.png';\nimport webHelpMenuImg from 'shared/img/works_webhelp.png';\nimport chatImg from 'shared/img/works_chat.png';\nimport dataTableImg from 'shared/img/works_table.png';\nimport uiCompsImg from 'shared/img/works_ui-comps.png';\nimport whackAMoleImg from 'shared/img/whack-a-mole.png';\nimport pockemonsImg from 'shared/img/works_pokemons.png';\nimport gradientImg from 'shared/img/works_gradient.png';\nimport portfolioImg from 'shared/img/works_portfolio.png';\nimport brainGamesImg from 'shared/img/works_brain-games.png';\nimport jsSamplesImg from 'shared/img/works_js-samples.png';\nimport applicantFormImg from 'shared/img/works_applicant-form.png';\n\nimport { projectDescription } from './projectDescriptionData';\n\nexport interface IMyWorksList {\n    [projectName: string]: {\n        title: string;\n        path: string;\n        imgSrc: string;\n        altText: () => string;\n        generalDescription: string;\n        mainDescription: React.ReactElement<string>;\n        projectUrl: string;\n        isSrcLink: boolean;\n        srcCodeUrl: string;\n    };\n}\n\nconst myWorksList: IMyWorksList = {\n    agilePdu: {\n        title: 'Agile-PDU online store',\n        path: '/agile-pdu-description',\n        imgSrc: agilePduImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.agilePdu.general,\n        mainDescription: projectDescription.agilePdu.main,\n        projectUrl: '/agile-pdu/index.html',\n        isSrcLink: false,\n        srcCodeUrl: '#',\n    },\n    portfolio: {\n        title: 'My Portfolio Website',\n        path: '/portfolio',\n        imgSrc: portfolioImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.portfolio.general,\n        mainDescription: projectDescription.portfolio.main,\n        projectUrl: '/',\n        isSrcLink: true,\n        srcCodeUrl: 'https://github.com/Timur-eit/timur_portfolio',\n    },\n    applicantForm: {\n        title: 'Web applicant form',\n        path: '/applicant_form',\n        imgSrc: applicantFormImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.applicantForm.general,\n        mainDescription: projectDescription.applicantForm.main,\n        projectUrl: '/applicant_form/index.html',\n        isSrcLink: true,\n        srcCodeUrl: 'https://github.com/Timur-eit/applicant_form_reactJS',\n    },\n    webHelp: {\n        title: 'Web-Help Visual Guidelines',\n        path: '/web-help-menu-description',\n        imgSrc: webHelpMenuImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.webHelp.general,\n        mainDescription: projectDescription.webHelp.main,\n        projectUrl: '/web-help-menu/index.html',\n        isSrcLink: true,\n        srcCodeUrl: 'https://github.com/Timur-eit/idea_web_help',\n    },\n    chat: {\n        title: 'Chat',\n        path: '/chat',\n        imgSrc: chatImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.chat.general,\n        mainDescription: projectDescription.chat.main,\n        projectUrl: 'https://github.com/Timur-eit/forasoft_jsdev_chat',\n        isSrcLink: false,\n        srcCodeUrl: '',\n    },\n    dataTable: {\n        title: 'Web App with Data table',\n        path: '/data-table-description',\n        imgSrc: dataTableImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.dataTable.general,\n        mainDescription: projectDescription.dataTable.main,\n        projectUrl: '/data-table/index.html',\n        isSrcLink: true,\n        srcCodeUrl:\n            'https://github.com/Timur-eit/Evgeny_react/tree/main/my-table',\n    },\n    uiComponents: {\n        title: 'UI Components',\n        path: '/ui-comps-description',\n        imgSrc: uiCompsImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.uiComponents.general,\n        mainDescription: projectDescription.uiComponents.main,\n        projectUrl: '/ui-comps/index.html',\n        isSrcLink: true,\n        srcCodeUrl:\n            'https://github.com/Timur-eit/Evgeny_react/tree/main/my-ui-comps',\n    },\n    whackAMole: {\n        title: 'Whack-a-Mole Game',\n        path: '/whack-a-mole-description',\n        imgSrc: whackAMoleImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.whackAMole.general,\n        mainDescription: projectDescription.whackAMole.main,\n        projectUrl: '/whack-a-mole/index.html',\n        isSrcLink: true,\n        srcCodeUrl: 'https://github.com/Timur-eit/whack-a-mole',\n    },\n    pokemons: {\n        title: 'Pokemons',\n        path: '/pokemons-description',\n        imgSrc: pockemonsImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.pokemons.general,\n        mainDescription: projectDescription.pokemons.main,\n        projectUrl: '/pokemons/index.html',\n        isSrcLink: true,\n        srcCodeUrl:\n            'https://github.com/Timur-eit/react_samples/tree/master/pokemons',\n    },\n    gradient: {\n        title: 'Gradient - Test task for React states',\n        path: '/gradient-description',\n        imgSrc: gradientImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.gradient.general,\n        mainDescription: projectDescription.gradient.main,\n        projectUrl: '/gradient/index.html',\n        isSrcLink: true,\n        srcCodeUrl:\n            'https://github.com/Timur-eit/react_samples/tree/master/gradient',\n    },\n    brainGames: {\n        title: 'Brain Games',\n        path: '/brain-games-description',\n        imgSrc: brainGamesImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.brainGames.general,\n        mainDescription: projectDescription.brainGames.main,\n        projectUrl: 'https://github.com/Timur-eit/brain_games#brain-games',\n        isSrcLink: true,\n        srcCodeUrl: 'https://github.com/Timur-eit/brain_games',\n    },\n    jsSamples: {\n        title: 'JS code',\n        path: '/js-samples-description',\n        imgSrc: jsSamplesImg,\n        altText() {\n            return this.title + ' Image';\n        },\n        generalDescription: projectDescription.jsSamples.general,\n        mainDescription: projectDescription.jsSamples.main,\n        projectUrl: 'https://github.com/Timur-eit/misc_jsSamples',\n        isSrcLink: false,\n        srcCodeUrl: '',\n    },\n};\n\nexport default myWorksList;\n","import Intro from 'components/Intro';\nimport Skills from 'components/Skills';\nimport WorksList from 'components/WorksList';\nimport Contacts from 'components/Contacts';\nimport { myContactList } from 'data/contactsData';\nimport skillsList from 'data/skillsList';\nimport worksList from 'data/worksList';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Intro />\n            <Skills skillsList={skillsList} />\n            <WorksList worklist={worksList} />\n            <Contacts contactList={myContactList} />\n        </div>\n    );\n}\n\nexport default App;\n","import '../style.scss';\nimport { createBrowserHistory } from 'history';\nimport React from 'react';\n\ninterface IProjectDescriptionProps {\n    title: string;\n    projectUrl: string;\n    srcCodeUrl: string;\n    img: string;\n    desciption: React.ReactElement<string>;\n    isSrcLink: boolean;\n}\n\nfunction ProjectDescription(props: IProjectDescriptionProps) {\n    const { title, projectUrl, srcCodeUrl, img, desciption, isSrcLink } = props;\n\n    const history = React.useMemo(() => createBrowserHistory(), []);\n\n    return (\n        <div className=\"project-description\">\n            <div>\n                <h1>{title}</h1>\n                <img src={img} alt=\"img\" />\n                {desciption}\n                <a\n                    href={projectUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"project-link\"\n                >\n                    Project Link\n                </a>\n                {isSrcLink && (\n                    <a\n                        href={srcCodeUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"project-link\"\n                    >\n                        Source Code Link\n                    </a>\n                )}\n            </div>\n            <div className=\"home-link\" onClick={() => history.back()}>\n                Back\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectDescription;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'reset.css';\nimport 'index.scss';\nimport App from 'App';\nimport ProjectDescription from 'components/WorksList/ProjectDescription';\nimport {\n    BrowserRouter as Router, // глобальная обертка (можно в индекс джс)\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport myWorksList from 'data/worksList';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Switch>\n                {Object.keys(myWorksList).map((item) => {\n                    return (\n                        <Route\n                            path={myWorksList[item].path}\n                            key={myWorksList[item].path}\n                        >\n                            <ProjectDescription\n                                title={myWorksList[item].title}\n                                projectUrl={myWorksList[item].projectUrl}\n                                img={myWorksList[item].imgSrc}\n                                desciption={myWorksList[item].mainDescription}\n                                isSrcLink={myWorksList[item].isSrcLink}\n                                srcCodeUrl={myWorksList[item].srcCodeUrl}\n                            />\n                        </Route>\n                    );\n                })}\n                <Route exact path=\"/\">\n                    <App />\n                </Route>\n            </Switch>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}