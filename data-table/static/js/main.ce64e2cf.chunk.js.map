{"version":3,"sources":["shared/img/edit-text-svgrepo-com.svg","shared/img/search-svgrepo-com.svg","shared/img/cross-svgrepo-com.svg","models/tableView.js","shared/utils/cookie.js","shared/utils/search.js","models/tableData.js","components/CorrectDataForms/CorrectDataForm.jsx","components/table/Table.jsx","components/table/index.jsx","shared/utils/queryStringEditor.js","components/AddNewDataForms/index.jsx","components/CorrectDataForms/RemoteSubmit.jsx","components/searchField/SearchField.jsx","components/searchField/index.jsx","components/deleteButton/DeleteButton.jsx","components/deleteButton/index.jsx","components/ControlPanel/ControlPanel.jsx","App.js","serviceWorker.js","shared/ui/forms/forms-model.js","history.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","CHANGE_ARROW_ID","ReducerRecord","arrowId","arrowIdSelector","createSelector","state","addCookie","name","value","options","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","isInputInData","input","data","dataToText","toString","toLowerCase","inputToText","i","slice","length","GET_TABLE_DATA","SORT_TABLE","ADD_NEW_TABLE_DATA","CORRECT_TABLE_DATA","SET_CHECKED_INDEX","SET_ALL_CHECKED_INDEXES","DELETE_MARKED_DATA","FIX_INITIAL_TABLE_DATA","SEARCH","CHANGE_MARKED_DATA","reduxTableData","reduxCheckedIndexes","savedTableData","stateSelector","reduxTableDataSelector","reduxCheckedIndexesSelector","correctTableData","formData","dispatch","getState","currentId","id","newCurrentTableItem","currentItemIndex","findIndex","item","newTableData","JSON","stringify","type","payload","fixInitialTableData","newSavedData","search","event","resultData","target","filter","result","key","CorrectDataForm","handleSubmit","initialize","initialData","fieldName","useEffect","onSubmit","Field","defaultValue","component","className","reduxForm","form","Table","columns","handleSort","checkboxHandle","checkedItemIndexes","changeArrowId","border","map","arrowDisplayState","field","onClick","Object","keys","cell","checked","includes","onChange","SortButton","defaultProps","connect","queryStringEditor","history","newSearch","window","location","regexp","push","regexpForQuestion","inputs","AddNewDataForms","console","log","placeholder","disabled","searchString","searchParamMatch","initialValues","router","query","withRouter","submit","src","searchImg","alt","SearchField","changeHandler","SearchFieldContatiner","DeleteButton","deleteMarkedItem","deleteImage","_","ControlPanel","RemoteSubmit","tableColumns","getReduxTableData","a","newReduxTableData","parse","fetch","then","response","json","sortReduxTable","direction","sortedTableData","sort","b","addNewTableData","fieldsNames","newTableItem","reduce","obj","currKey","Math","trunc","random","concat","setCheckedItemIndex","itemIndex","newCheckedIndexes","setAllItemsCheked","newReduxCheckedIndexes","allItemsIndexes","searchParamValue","to","path","checkAllCheckboxes","exact","Boolean","hostname","SET_INITIAL_FIELDS","CHANGE_INPUTS","reduxInputsData","browserHistory","createBrowserHistory","combineReducers","action","assign","reduxFormReducer","connectRouter","enhancer","applyMiddleware","thunk","routerMiddleware","logger","store","createStore","reducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,+C,kTCO9BC,EAAe,UAHF,gBAGE,oBAKfC,EAAgB,CAC3BC,QAAS,IAkBJ,IACMC,EAAkBC,aADF,SAAAC,GAAK,OAAIA,EA3BZ,oBA4BmC,SAAAA,GAAK,OAAIA,EAAMH,W,8CChCrE,SAASI,EAAUC,EAAMC,EAAOC,GAGrC,IAAIC,GAFJD,EAAUA,GAAW,IAECC,QAEtB,GAAuB,kBAAZA,GAAwBA,EAAS,CAC1C,IAAMC,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAsB,IAAVJ,GACxBA,EAAUD,EAAQC,QAAUC,EAE1BD,GAAWA,EAAQK,cACrBN,EAAQC,QAAUA,EAAQK,eAK5B,IAAIC,EAAgBT,EAAO,KAF3BC,EAAQS,mBAAmBT,IAI3B,IAAK,IAAIU,KAAYT,EAAS,CAC5BO,GAAiB,KAAOE,EACxB,IAAIC,EAAYV,EAAQS,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAI3BC,SAASC,OAASL,EAGb,SAASM,EAAUf,GACxB,IAAMgB,EAAUH,SAASC,OAAOG,MAAM,IAAIC,OAExC,WAAalB,EAAKmB,QAAQ,+BAAgC,QAAU,aAEtE,OAAOH,EAAUI,mBAAmBJ,EAAQ,SAAMK,E,aClC7C,SAASC,EAAcC,EAAOC,GACnC,IADyC,EACnCC,EAAaD,EAAKE,WAAWC,cAC7BC,EAAcL,EAAMG,WAAWC,cACjCE,EAAI,EAHiC,cAItBJ,GAJsB,IAIzC,2BAA+B,CAC7B,GAD6B,UAChBG,EAAY,GACrB,OAAOA,IAAgBH,EAAWK,MAAMD,EAAGA,EAAID,EAAYG,QAEhEF,KARwC,8BAUzC,OAAO,ECJF,IAGMG,EAAc,UAHD,WAGC,mBACdC,EAAU,UAJG,WAIH,eACVC,EAAkB,UALL,WAKK,uBAClBC,EAAkB,UANL,WAMK,uBAClBC,EAAiB,UAPJ,WAOI,sBACjBC,EAAuB,UARV,WAQU,4BACvBC,EAAkB,UATL,WASK,uBAClBC,EAAsB,UAVT,WAUS,2BACtBC,EAAM,UAXO,WAWP,WAENC,EAAkB,UAbL,WAaK,uBAIlB/C,EAAgB,CAC3BgD,eAAgB,GAChBC,oBAAqB,GACrBC,eAAgB,IA0DX,IAAMC,EAAgB,SAAA/C,GAAK,OAAIA,EA9EZ,aA+EbgD,EAAyBjD,YAAegD,GAAe,SAAA/C,GAAK,OAAIA,EAAM4C,kBACtEK,EAA8BlD,YAAegD,GAAe,SAAA/C,GAAK,OAAIA,EAAM6C,uBAClD9C,YAAegD,GAAe,SAAA/C,GAAK,OAAIA,EAAM8C,kBAuE5E,SAASI,EAAiBC,GAG/B,OAAO,SAACC,EAAUC,GAAc,IACtBT,EAAmBS,IA5JL,YA4JdT,eACFU,EAAYH,EAASI,GAErBC,EAAmB,aAAKD,GAAID,GAAcH,GAE1CM,EAAmBb,EAAec,WAAU,SAAAC,GAAI,OAAIA,EAAKJ,KAAOD,KAChEM,EAAY,YAAOhB,GACzBgB,EAAaH,GAAb,eAAqCD,GAErCvD,EAAU,QAAS4D,KAAKC,UAAUF,IAElCR,EAAS,CACPW,KAAM1B,EACN2B,QAAS,CAAEpB,eAAgBgB,EAAcf,oBAAqB,OA0D7D,SAASoB,IACd,OAAO,SAACb,EAAUC,GAAc,IAI1Ba,EAHItB,EAAmBS,IArOL,YAqOdT,eACAE,EAAmBO,IAtOL,YAsOdP,eAINoB,EADEpB,EAAeb,OAAS,EACd,YAAOW,GAEP,YAAOE,GAGrBM,EAAS,CACPW,KAAMtB,EACNuB,QAASE,KAKR,SAASC,EAAOC,GACrB,OAAO,SAAChB,EAAUC,GAAc,IAI1BgB,EAHIlE,EAAUiE,EAAME,OAAhBnE,MACAyC,EAAmBS,IAzPL,YAyPdT,eACAE,EAAmBO,IA1PL,YA0PdP,eAEJoB,EAAY,YAAOpB,GAEnB3C,EAAM8B,OAAS,EACjBoC,EAAa,YAAIzB,GAAgB2B,QAAO,SAAAZ,GACtC,IAAIa,EAAS,KACb,IAAK,IAAMC,KAAOd,EACZnC,EAAcrB,EAAOwD,EAAKc,MAC5BD,EAASb,GAGb,OAAOa,MAGTH,EAAU,YAAOvB,GACjBoB,EAAe,IAGjBd,EAAS,CACPW,KAAMrB,EACNsB,QAAS,CAAEpB,eAAgByB,EAAYvB,eAAgBoB,M,sBChRzDQ,G,MAAkB,YAKf,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,UAOA,OAJAC,qBAAU,WACRH,EAAWC,KACV,CAACD,EAAYC,IAGd,oCACE,0BAAMG,SAAUL,GACd,kBAACM,EAAA,EAAD,CAAO/E,KAAM4E,EAAWI,aAAcL,EAAaM,UAAU,WAAWpB,KAAK,OAAOqB,UAAU,oBAWvFV,EALfA,EAAkBW,YAAU,CAC1BC,KAAM,kBACNN,SAAU9B,GAFMmC,CAGfX,GCrBUa,G,cAAQ,SAAC,GAUf,IATLC,EASI,EATJA,QACA9D,EAQI,EARJA,KACA+D,EAOI,EAPJA,WACAC,EAMI,EANJA,eACAC,EAKI,EALJA,mBAEA9F,EAGI,EAHJA,QACA+F,EAEI,EAFJA,cACA1C,EACI,EADJA,iBAGA,OACE,oCACA,2BAAO2C,OAAO,KACZ,+BACE,4BACGL,EAAQM,KAAI,SAACnC,EAAM5B,GAChB,OAAO,wBAAI0C,IAAK1C,GACd,kBAAC,EAAD,CACEgE,kBAAmBlG,EACnBmG,MAAOrC,EACPsC,QAAS,WACPL,EAAcjC,GACJ8B,EAAW9B,EAArB9D,EAA2B,GAAuB,MANjD,UASD8D,SAOd,+BACGjC,GAAQA,EAAKO,OAASP,EAAKoE,KAC1B,SAACnC,EAAM5B,GAAP,OACE,wBAAI0C,IAAK1C,GACNmE,OAAOC,KAAKxC,GAAMmC,KAAI,SAACM,EAAM3B,GAC5B,MAAa,cAAT2B,EACK,wBAAI3B,IAAKA,GACd,2BAAOlB,GAAG,WAAW8C,QAAUV,EAAmBW,SAASvE,GAAKgC,KAAK,WAAWwC,SAAU,kBAAMb,EAAe3D,OAI1G,wBAAI0C,IAAKA,GACdkB,EAAmBW,SAASvE,IAAe,OAATqE,EAAgB,kBAAC,EAAD,CAAiBtB,UAAWsB,EAAMvB,YAAanD,EAAKK,GAAIiD,SAAU,SAACtD,GAAD,OAAUwB,EAAiBxB,MAAaiC,EAAKyC,WAKzK,UASNI,EAAa,SAAC,GAIX,IAHPT,EAGM,EAHNA,kBACAE,EAEM,EAFNA,QACAD,EACM,EADNA,MAEA,OACE,0BAAMC,QAASA,GAAUF,IAAsBC,EAAQ,8CAAe,gDAS1ET,EAAMkB,aAAe,CACnB/E,KAAM,IAGO6D,ICjFAmB,eAAQ,SAAA1G,GAAK,MAAK,CAC/BH,QAASC,EAAgBE,MAEvB,CACF4F,cN4BK,SAAuBd,GAC5B,OAAO,SAAC1B,EAAUC,GAAc,IACtBxD,EAAYwD,IAnCE,iBAmCdxD,QAORuD,EAAS,CACPW,KAAMpE,EACNqE,QAPEnE,IAAYiF,EACDA,EAEA,OMlCjB5B,oBALawD,CAMZnB,G,OCXI,SAASoB,EAAkBvC,EAAOU,EAAW8B,GAAU,IAMxDC,EALI1G,EAAUiE,EAAME,OAAhBnE,MAEFgE,EAAS2C,OAAOC,SAAS5C,OACzB6C,EAAS,IAAI5F,OAAJ,iBAAqB0D,EAArB,aACT3D,EAAQgD,EAAOhD,MAAM6F,GAG3B,GAAI7G,EAAM8B,OAAS,EACbkC,EAAOlC,OAAS,EACJ,OAAVd,GACF0F,EAAY1C,EAAO9C,QAAQ2F,EAAf,aAA6B7G,IACzCyG,EAAQvF,QAAQ,CAAE8C,OAAQ0C,MAE1BA,EAAS,UAAM1C,EAAN,YAAgBW,EAAhB,YAA6B3E,GACtCyG,EAAQvF,QAAQ,CAAE8C,OAAQ0C,KAG5BD,EAAQK,KAAK,CAAE9C,OAAO,IAAD,OAAMW,EAAN,YAAmB3E,UAG1C,GAAIgB,EAAM,GAAGA,MAAM,MAAO,CACxB,IAAM+F,EAAoB9F,OAAO,MAAD,OAAO0D,EAAP,eAChC+B,EAAY1C,EAAO9C,QAAQ6F,EAAmB,IAC9CN,EAAQvF,QAAQ,CAAE8C,OAAQ0C,SAE1BA,EAAY1C,EAAO9C,QAAQ2F,EAAQ,IACnCJ,EAAQvF,QAAQ,CAAE8C,OAAQ0C,I,WCpB1BM,EAAS,CAAC,OAAQ,QAAS,SAAU,WAEvCC,EAAkB,YAKf,IAJLzC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACA+B,EACI,EADJA,QAkBA,OAdAS,QAAQC,IAAIV,GAUZ7B,qBAAU,WACRH,EAAWC,KACV,CAACD,EAAYC,IAGd,oCAEE,0BAAMO,UAAU,iBAAiBJ,SAAUL,GACxCwC,EAAOrB,KAAI,SAACnC,EAAMc,GAAP,OACV,yBAAKW,UAAU,QAAQX,IAAKA,GAC1B,kBAACQ,EAAA,EAAD,CAAO/E,KAAMyD,EAAMwB,UAAU,QAAQpB,KAAK,OAAOwD,YAAW,gBAAW5D,GAAQ4C,SAAU,SAACnC,GAAD,OAAWuC,EAAkBvC,EAAOT,EAAMiD,UAEvI,4BAAQxB,UAAU,gBAAgBrB,KAAK,SAASyD,UApBtD,WACE,IAAMC,EAAeb,EAAQG,SAAS5C,OAEtC,OADcgD,EAAO5C,QAAO,SAAAO,GAAS,OAAI2C,EAAanB,SAASxB,MAClD7C,OAiBkDyF,IAA3D,uDAQRN,EAAkB/B,YAAU,CAC1BC,KAAM,kBADUD,CAEf+B,GAEHA,EAAkBV,aAChB,SAAA1G,GAAK,MAAK,CACR2H,cAAe3H,EAAM4H,OAAOb,SAASc,SAFvBnB,CAIhBU,GAIaA,MAFfA,EAAkBU,YAAWV,G,mCCxCdV,gBACb,SAAA1G,GAAK,MAAK,CACV6C,oBAAqBI,EAA4BjD,MAC/C,CACF+H,YAJarB,EAVY,SAAC,GAAD,IAAGqB,EAAH,EAAGA,OAAQlF,EAAX,EAAWA,oBAAX,OACvB,4BAAQuC,UAAU,iBAAiBoC,SAAU3E,EAAoBZ,OAAS,EACxE8B,KAAK,SACLkC,QAAS,kBAAM8B,EAAO,qBAEtB,yBAAKC,IAAKC,IAAWC,IAAI,mCACzB,oH,8BCPFC,GAAc,YAA8D,IAA3DhE,EAA0D,EAA1DA,OAAQF,EAAkD,EAAlDA,oBAAqB2C,EAA6B,EAA7BA,QAA6B,EAApBe,cAezD,OACE,yBAAKvC,UAAU,gBACb,yBAAK4C,IAAKC,KAAWC,IAAI,mCACzB,gEACA,kBAACjD,EAAA,EAAD,CAAO/E,KAAM,SAAUiF,UAAU,QAAQpB,KAAK,OAAOwC,SAAU,SAACnC,GAAD,OAjBnE,SAAuBA,GACrBH,IACAE,EAAOC,GAQPuC,EAAkBvC,EAAO,SAAUwC,GAOyCwB,CAAchE,IAAQmD,YAAa,iBAUpGY,GALfA,GAAc9C,YAAU,CACtBC,KAAM,eACL,GAFWD,CAGX8C,ICzBCE,GAAwB3B,aAAQ,SAAA1G,GAAK,MAAI,CAC3C2H,cAAe3H,EAAM4H,OAAOb,SAASc,SACnC,CACF1D,SACAF,uBAJ0ByC,CAKzByB,IAIYE,GAFfA,GAAwBP,YAAWO,I,8BCApBC,OAXf,YAAkE,IAA1CzF,EAAyC,EAAzCA,oBAAqB0F,EAAoB,EAApBA,iBAC3C,OACE,6BACE,4BAAQnD,UAAU,gBAAgBoC,SAAU3E,EAAoBZ,OAAS,EAAGgE,QAAS,kBAAMsC,MACzF,yBAAKP,IAAKQ,KAAaN,IAAI,+CAC3B,+ECDOxB,gBAAQ,SAAA1G,GAAK,MAAI,CAC9B6C,oBAAqBI,EAA4BjD,MAC/C,CACFuI,iBV6MK,WACL,OAAO,SAACnF,EAAUC,GAAc,IACtBT,EAAmBS,IApNL,YAoNdT,eACAC,EAAwBQ,IArNV,YAqNdR,oBAEFe,EAAe,YAAIhB,GAAgB2B,QAAO,SAACkE,EAAG1G,GAAJ,OAAWc,EAAoByD,SAASvE,MAGxF9B,EAAU,QAAS4D,KAAKC,UAAUF,IAElCR,EAAS,CACPW,KAAMvB,EACNwB,QAAS,CAAEpB,eAAgBgB,EAAcf,oBANZ,SUtNpB6D,CAIZ4B,I,OCIYI,OAVf,WACE,OACE,yBAAKtD,UAAU,iBACb,kBAACuD,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCeOC,I,cAAe,CAAC,KAAM,OAAQ,QAAS,SAAU,kBAAmB,cA4DlElC,oBAAQ,SAAA1G,GAAK,MAAK,CAC/B4C,eAAgBI,EAAuBhD,GACvC6C,oBAAqBI,EAA4BjD,GACjD+G,SAAU/G,EAAM4H,OAAOb,YACrB,CACF8B,kBZAK,WACL,8CAAO,WAAOzF,GAAP,iBAAA0F,EAAA,yDACDC,EAAoB,KAIlB/H,EAASC,EAAU,UALpB,gBAOH8H,EAAkB9B,KAAlB,MAAA8B,EAAiB,YAASlF,KAAKmF,MAAMhI,KAPlC,sCASGiI,MAAM,8IACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACxH,GAAD,OAAUqH,EAAkB9B,KAAlB,MAAA8B,EAAiB,YAASrH,OAXzC,OAYHzB,EAAU,QAAS4D,KAAKC,UAAUiF,IAZ/B,OAcL3F,EAAS,CACPW,KAAM7B,EACN8B,QAAS+E,IAhBN,4CAAP,uDYAAM,eZqBK,SAAwBrD,EAAOsD,GACpC,OAAO,SAAClG,EAAUC,GAAc,IACtBT,EAAmBS,IA7GL,YA6GdT,eACJ2G,EAAkB,YAAI3G,GAAgB4G,MAAK,SAACV,EAAGW,GACjD,OAAIX,EAAE9C,GAASyD,EAAEzD,IACK,EAAbsD,EACER,EAAE9C,GAASyD,EAAEzD,GACH,EAAZsD,EAEA,KAGXlG,EAAS,CACPW,KAAM5B,EACN6B,QAASuF,MYlCbG,gBZuCK,SAAyBC,EAAaxG,GAC3C,OAAO,SAACC,EAAUC,GAAc,IACtBT,EAAmBS,IAhIL,YAgIdT,eACFgH,EAAeD,EAAYE,QAAO,SAACC,EAAKC,GAU5C,OARED,EAAIC,GADU,OAAZA,EACaC,KAAKC,MAAsB,IAAhBD,KAAKE,UACV,cAAZH,IAEY,oBAAZA,EACM5G,EAAQ,QAERA,EAAS4G,IAEnBD,IACN,IAEGlG,EAAe,YAAIhB,GAAgBuH,OAAO,CAACP,IACjD3J,EAAU,QAAS4D,KAAKC,UAAUF,IAElCR,EAAS,CACPW,KAAM3B,EACN4B,QAASJ,MY3DbwG,oBZwFK,SAA6BC,GAClC,OAAO,SAACjH,EAAUC,GAAc,IAE1BiH,EADIzH,EAAwBQ,IAlLV,YAkLdR,oBAGNyH,EADEzH,EAAoByD,SAAS+D,GACXxH,EAAoB0B,QAAO,SAAAZ,GAAI,OAAIA,IAAS0G,KAE/C,sBAAOxH,GAAP,CAA4BwH,IAE/CjH,EAAS,CACPW,KAAMzB,EACN0B,QAASsG,MYlGbC,kBZuGK,WACL,OAAO,SAACnH,EAAUC,GAAc,IAI1BmH,EAHI5H,EAAmBS,IAlML,YAkMdT,eACAC,EAAwBQ,IAnMV,YAmMdR,oBACF4H,EAAkB,YAAI7H,GAAgBkD,KAAI,SAAC2C,EAAG1G,GAAJ,OAAUA,KAGxDyI,EADE3H,EAAoBZ,SAAWW,EAAeX,OACvB,GAEAwI,EAE3BrH,EAAS,CACPW,KAAMxB,EACNyB,QAASwG,MYnHbvG,sBACAE,UAXauC,EA1Df,YAYI,IAXF9D,EAWC,EAXDA,eACAiG,EAUC,EAVDA,kBACAQ,EASC,EATDA,eACAK,EAQC,EARDA,gBACA7G,EAOC,EAPDA,oBACAuH,EAMC,EANDA,oBACAG,EAKC,EALDA,kBACApG,EAIC,EAJDA,OACAF,EAGC,EAHDA,oBACA8C,EAEC,EAFDA,SAIM2D,EAAmB3D,EAASc,MAAM1D,OAaxC,OAXAY,qBAAU,WAER,GADA8D,IACI6B,EAAkB,CACpB,IAAMtG,EAAQ,CAAEE,OAAQ,CAAEnE,MAAOuK,IACjCzG,IACAE,EAAOC,MAGR,CAACyE,EAAmB5E,EAAqBE,EAAQuG,IAIlD,yBAAKtF,UAAU,OACb,kBAAC,IAAD,CAAM7B,GAAG,iBAAiBoH,GAAG,UAA7B,mIACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,CAAiB/F,YAAakC,EAASc,MAAO7C,SAAU,SAACtD,GAAD,OAAUgI,EAAgBd,GAAclH,MAChG,kBAAC,EAAD,CACEA,KAAMkB,EACN4C,QAASoD,GACTlD,eAAgB0E,EAChBzE,mBAAoB9C,EACpBgI,mBAAoBN,EACpB9E,WAAY4D,IAMd,kBAAC,GAAD,CAAcjE,UAAU,mBAE1B,kBAAC,IAAD,CAAO0F,OAAK,EAACF,KAAK,MAElB,kBAAC,IAAD,CAAOA,KAAK,KAAZ,WACU,6BADV,uCCjEYG,QACW,cAA7BjE,OAAOC,SAASiE,UAEe,UAA7BlE,OAAOC,SAASiE,UAEhBlE,OAAOC,SAASiE,SAAS7J,MACvB,2D,oDCXO8J,I,OAAkB,UAHL,WAGK,wBAClBC,GAAa,UAJA,WAIA,kBAIbtL,GAAgB,CAC3BuL,gBAAiB,IAuBoBpL,aADV,SAAAC,GAAK,OAAIA,EA/BZ,eAgC2C,SAAAA,GAAK,OAAIA,EAAMmL,mB,oCChCrEC,GAFQC,eCORC,iBAAe,sBhBHJ,YAuBX,WAAiD,IAAhCtL,EAA+B,uDAAvBJ,EAAe2L,EAAQ,uCACrDxH,EAAkBwH,EAAlBxH,KAAMC,EAAYuH,EAAZvH,QAEd,OAAQD,GACN,KAAK7B,EAIL,KAAKC,EAIL,KAAKC,EACH,OAAO8D,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B4C,eAAgBoB,IAEpB,KAAK3B,EACH,OAAO6D,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B4C,eAAgBoB,EAAQpB,eACxBC,oBAAqBmB,EAAQnB,sBAEjC,KAAKP,EAIL,KAAKC,EACH,OAAO2D,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B6C,oBAAqBmB,IAEzB,KAAKxB,EACH,OAAO0D,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B4C,eAAgBoB,EAAQpB,eACxBC,oBAAqBmB,EAAQnB,sBAEjC,KAAKJ,EACH,OAAOyD,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B8C,eAAgBkB,IAEpB,KAAKtB,EACH,OAAOwD,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B4C,eAAgBoB,EAAQpB,eACxBE,eAAgBkB,EAAQlB,iBAE5B,KAAKH,EACH,OAAOuD,OAAOsF,OAAO,GAAIxL,EAAO,CAC9B4C,eAAgBoB,EAAQpB,eACxBC,oBAAqBmB,EAAQnB,sBAEjC,QACE,OAAO7C,MgBrEiB,gBFLJ,YAYX,WAAiD,IAAhCA,EAA+B,uDAAvBJ,GAAe2L,EAAQ,uCACrDxH,EAAkBwH,EAAlBxH,KAAMC,EAAYuH,EAAZvH,QAEd,OAAQD,GACN,KAAKkH,GAIL,KAAKC,GACH,OAAOhF,OAAOsF,OAAO,GAAIxL,EAAO,CAC9BmL,gBAAiBnH,IAErB,QACE,OAAOhE,MEpBiB,gBnBLJ,iBAYX,WAAiD,IAAhCA,EAA+B,uDAAvBJ,EAAe2L,EAAQ,uCACrDxH,EAAkBwH,EAAlBxH,KAAMC,EAAYuH,EAAZvH,QAEd,OAAQD,GACN,KAAKpE,EACH,OAAOuG,OAAOsF,OAAO,GAAIxL,EAAO,CAC9BH,QAASmE,IAEb,QACE,OAAOhE,MmBhBiB,uBAItByL,MAJsB,yBAKpBC,aAAc9E,KALM,K,UCDxB+E,GAAWC,aAAgBC,KAAOC,aAAiBlF,IAAUmF,MAC7DC,GAAQC,aAAYC,GAASP,IACnC7E,OAAOkF,MAAQA,GAAM3I,WAEN2I,U,OCGfG,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,KAAD,CAAiBpF,QAASA,IACxB,kBAAC,GAAD,MADF,MAIF7F,SAASsL,eAAe,SL8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtD,MAAK,SAAAuD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvF,QAAQuF,MAAMA,EAAMC,a","file":"static/js/main.ce64e2cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit-text-svgrepo-com.10bff670.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-svgrepo-com.8950c04a.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-svgrepo-com.28735e20.svg\";","import { createSelector } from 'reselect'\n\n// Constants\n\nexport const moduleName = 'pl-table-view'\nconst prefix = moduleName\n\nexport const CHANGE_ARROW_ID = `${prefix}/CHANGE_ARROW_ID`\n\n\n// Reducer\n\nexport const ReducerRecord = {\n  arrowId: '',\n}\n\nexport default function reducer(state = ReducerRecord, action) {\n  const { type, payload } = action\n\n  switch (type) {    \n    case CHANGE_ARROW_ID:\n      return Object.assign({}, state, {\n        arrowId: payload\n      })    \n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const stateSelector = state => state[moduleName]\nexport const arrowIdSelector = createSelector(stateSelector, state => state.arrowId)\n\n\n// Action creators\n\nexport function changeArrowId(fieldName) {\n  return (dispatch, getState) => {\n    const { arrowId } = getState()[moduleName]\n    let newArrowId = null\n    if (arrowId !== fieldName) {\n      newArrowId = fieldName\n    } else {\n      newArrowId = ''\n    }\n    dispatch({\n      type: CHANGE_ARROW_ID,\n      payload: newArrowId\n    })\n  }\n}\n\n","export function addCookie(name, value, options) {\n  options = options || {}\n  \n  let expires = options.expires\n  \n  if (typeof expires === \"number\" && expires) {\n    const d = new Date()\n    d.setTime(d.getTime() + expires * 1000)\n    expires = options.expires = d\n  }\n  if (expires && expires.toUTCString) {\n    options.expires = expires.toUTCString()\n  }\n  \n  value = encodeURIComponent(value)\n  \n  let updatedCookie = name + \"=\" + value\n  \n  for (var propName in options) {\n    updatedCookie += \"; \" + propName\n    var propValue = options[propName]\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue\n    }\n  }\n  //console.log(updatedCookie)\n  document.cookie = updatedCookie\n}\n\nexport function getCookie(name) {\n  const matches = document.cookie.match(new RegExp(\n    // eslint-disable-next-line no-useless-escape\n    \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n  ))\n  return matches ? decodeURIComponent(matches[1]) : undefined\n}\n\nexport function deleteCookie(name) {\n  addCookie(name, \"\", {\n    expires: -1, path: '/'\n  })\n}","export function isInputInData(input, data) {\n  const dataToText = data.toString().toLowerCase()\n  const inputToText = input.toString().toLowerCase()\n  let i = 0\n  for (const char of dataToText) {\n    if (char === inputToText[0]) {\n        return inputToText === dataToText.slice(i, i + inputToText.length)\n    }\n  \ti++\n  }\n  return false\n}","import { createSelector } from 'reselect'\nimport { addCookie, getCookie } from '../shared/utils/cookie.js'\nimport { isInputInData } from '../shared/utils/search.js'\n\n// Constants\n\nexport const moduleName = 'pl-table'\nconst prefix = moduleName\n\nexport const GET_TABLE_DATA = `${prefix}/GET_TABLE_DATA`\nexport const SORT_TABLE = `${prefix}/SORT_TABLE`\nexport const ADD_NEW_TABLE_DATA = `${prefix}/ADD_NEW_TABLE_DATA`\nexport const CORRECT_TABLE_DATA = `${prefix}/CORRECT_TABLE_DATA`\nexport const SET_CHECKED_INDEX = `${prefix}/SET_CHECKED_INDEX`\nexport const SET_ALL_CHECKED_INDEXES = `${prefix}/SET_ALL_CHECKED_INDEXES`\nexport const DELETE_MARKED_DATA = `${prefix}/DELETE_MARKED_DATA`\nexport const FIX_INITIAL_TABLE_DATA = `${prefix}/FIX_INITIAL_TABLE_DATA`\nexport const SEARCH = `${prefix}/SEARCH`\n\nexport const CHANGE_MARKED_DATA = `${prefix}/CHANGE_MARKED_DATA`\n\n// Reducer\n\nexport const ReducerRecord = {\n  reduxTableData: [],\n  reduxCheckedIndexes: [],\n  savedTableData: [],\n}\n\nexport default function reducer(state = ReducerRecord, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case GET_TABLE_DATA:\n      return Object.assign({}, state, {\n        reduxTableData: payload,\n      })\n    case SORT_TABLE:\n      return Object.assign({}, state, {\n        reduxTableData: payload\n      })\n    case ADD_NEW_TABLE_DATA:\n      return Object.assign({}, state, {\n        reduxTableData: payload,\n      })\n    case CORRECT_TABLE_DATA:\n      return Object.assign({}, state, {\n        reduxTableData: payload.reduxTableData,\n        reduxCheckedIndexes: payload.reduxCheckedIndexes,\n      })\n    case SET_CHECKED_INDEX:\n      return Object.assign({}, state, {\n        reduxCheckedIndexes: payload,\n      })\n    case SET_ALL_CHECKED_INDEXES:\n      return Object.assign({}, state, {\n        reduxCheckedIndexes: payload,\n      })\n    case DELETE_MARKED_DATA:\n      return Object.assign({}, state, {\n        reduxTableData: payload.reduxTableData,\n        reduxCheckedIndexes: payload.reduxCheckedIndexes,\n      })\n    case FIX_INITIAL_TABLE_DATA:\n      return Object.assign({}, state, {\n        savedTableData: payload,\n      })\n    case SEARCH:\n      return Object.assign({}, state, {\n        reduxTableData: payload.reduxTableData,\n        savedTableData: payload.savedTableData,\n      })\n    case CHANGE_MARKED_DATA:\n      return Object.assign({}, state, {\n        reduxTableData: payload.reduxTableData,\n        reduxCheckedIndexes: payload.reduxCheckedIndexes,\n      })\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const stateSelector = state => state[moduleName]\nexport const reduxTableDataSelector = createSelector(stateSelector, state => state.reduxTableData)\nexport const reduxCheckedIndexesSelector = createSelector(stateSelector, state => state.reduxCheckedIndexes)\nexport const savedTableDataSelector = createSelector(stateSelector, state => state.savedTableData)\n\n// Action creators\n\nexport function getReduxTableData() {\n  return async (dispatch) => {\n    let newReduxTableData = []\n    // const { query } = getState()['router'].location\n    // console.log(query)\n\n    const cookie = getCookie('table')\n    if (cookie) {\n      newReduxTableData.push(...JSON.parse(cookie))\n    } else {\n      await fetch('https://gist.githubusercontent.com/Greyewi/b6da020196da66028c3058ea0746a08f/raw/c809ff8ccbc22376ea6397a3460ea423ac5b40b3/Evgeny_table.json')\n        .then(response => response.json())\n        .then((data) => newReduxTableData.push(...data))\n      addCookie('table', JSON.stringify(newReduxTableData))\n    }\n    dispatch({\n      type: GET_TABLE_DATA,\n      payload: newReduxTableData,\n    })\n  }\n}\n\nexport function sortReduxTable(field, direction) { // direction: one of [1, -1]\n  return (dispatch, getState) => {\n    const { reduxTableData } = getState()[moduleName]\n    let sortedTableData = [...reduxTableData].sort((a, b) => {\n      if (a[field] < b[field]) {\n        return direction * -1\n      } else if (a[field] > b[field]) {\n        return direction * 1\n      } else {\n        return 0\n      }\n    })\n    dispatch({\n      type: SORT_TABLE,\n      payload: sortedTableData,\n    })\n  }\n}\n\nexport function addNewTableData(fieldsNames, formData) {\n  return (dispatch, getState) => {\n    const { reduxTableData } = getState()[moduleName]\n    const newTableItem = fieldsNames.reduce((obj, currKey) => {\n      if (currKey === 'id') {\n        obj[currKey] = Math.trunc(Math.random() * 100)\n      } else if (currKey === 'isChecked') {\n        obj[currKey] = false\n      } else if (currKey === 'current version') {\n        obj[currKey] = formData['version']\n      } else {\n        obj[currKey] = formData[currKey]\n      }\n      return obj\n    }, {})\n\n    const newTableData = [...reduxTableData].concat([newTableItem])\n    addCookie('table', JSON.stringify(newTableData))\n\n    dispatch({\n      type: ADD_NEW_TABLE_DATA,\n      payload: newTableData,\n    })\n  }\n}\n\nexport function correctTableData(formData) {\n  // console.log('redux submit')\n\n  return (dispatch, getState) => {\n    const { reduxTableData } = getState()[moduleName]\n    const currentId = formData.id\n    // const currentTableItem = { ...reduxTableData.filter(item => item.id === currentId) }\n    const newCurrentTableItem = { id: currentId, ...formData}\n\n    const currentItemIndex = reduxTableData.findIndex(item => item.id === currentId)\n    const newTableData = [...reduxTableData]\n    newTableData[currentItemIndex] = {...newCurrentTableItem}\n\n    addCookie('table', JSON.stringify(newTableData))\n\n    dispatch({\n      type: CORRECT_TABLE_DATA,\n      payload: { reduxTableData: newTableData, reduxCheckedIndexes: [] }\n    })\n  }\n}\n\n\n\nexport function setCheckedItemIndex(itemIndex) {\n  return (dispatch, getState) => {\n    const { reduxCheckedIndexes } = getState()[moduleName]\n    let newCheckedIndexes\n    if (reduxCheckedIndexes.includes(itemIndex)) {\n      newCheckedIndexes = reduxCheckedIndexes.filter(item => item !== itemIndex)\n    } else {\n      newCheckedIndexes = [...reduxCheckedIndexes, itemIndex]\n    }\n    dispatch({\n      type: SET_CHECKED_INDEX,\n      payload: newCheckedIndexes\n    })\n  }\n}\n\nexport function setAllItemsCheked() {\n  return (dispatch, getState) => {\n    const { reduxTableData } = getState()[moduleName]\n    const { reduxCheckedIndexes } = getState()[moduleName]\n    const allItemsIndexes = [...reduxTableData].map((_, i) => i)\n    let newReduxCheckedIndexes\n    if (reduxCheckedIndexes.length === reduxTableData.length) {\n      newReduxCheckedIndexes = []\n    } else {\n      newReduxCheckedIndexes = allItemsIndexes\n    }\n    dispatch({\n      type: SET_ALL_CHECKED_INDEXES,\n      payload: newReduxCheckedIndexes,\n    })\n  }\n}\n\nexport function deleteMarkedItem() {\n  return (dispatch, getState) => {\n    const { reduxTableData } = getState()[moduleName]\n    const { reduxCheckedIndexes } = getState()[moduleName]\n    // eslint-disable-next-line array-callback-return\n    const newTableData = [...reduxTableData].filter((_, i) => !reduxCheckedIndexes.includes(i))\n    const newReduxCheckedIndexes = []\n    \n    addCookie('table', JSON.stringify(newTableData))\n    \n    dispatch({\n      type: DELETE_MARKED_DATA,\n      payload: { reduxTableData: newTableData, reduxCheckedIndexes: newReduxCheckedIndexes }\n    })\n  }\n}\n\nexport function fixInitialTableData() {\n  return (dispatch, getState) => {    \n    const { reduxTableData } = getState()[moduleName]\n    const { savedTableData } = getState()[moduleName]\n\n    let newSavedData\n    if (savedTableData.length < 1) {\n      newSavedData = [...reduxTableData]\n    } else {\n      newSavedData = [...savedTableData]\n    }\n\n    dispatch({\n      type: FIX_INITIAL_TABLE_DATA,\n      payload: newSavedData,\n    })\n  }\n}\n\nexport function search(event) {\n  return (dispatch, getState) => {\n    const { value } = event.target    \n    const { reduxTableData } = getState()[moduleName]\n    const { savedTableData } = getState()[moduleName]\n    let resultData\n    let newSavedData = [...savedTableData]\n\n    if (value.length > 0) {\n      resultData = [...reduxTableData].filter(item => {\n        let result = null\n        for (const key in item) {\n          if (isInputInData(value, item[key])) {\n            result = item\n          }\n        }\n        return result\n      })\n    } else {\n      resultData = [...savedTableData]\n      newSavedData = []\n    }\n\n    dispatch({\n      type: SEARCH,\n      payload: { reduxTableData: resultData, savedTableData: newSavedData }\n    })\n  }\n}\n\n// export function isInputInData(input, data) {\n//   const dataToText = data.toString().toLowerCase()\n//   const inputToText = input.toString().toLowerCase()\n//   let i = 0\n\n//   for (const char of dataToText) {\n//     if (char === inputToText[0]) {\n//       if (inputToText === dataToText.slice(i, i + inputToText.length)) {\n//         return true\n//       } else {\n//         return false\n//       }\n//     }\n//     i++\n//   }\n//   return false\n// }","import React, { useEffect } from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { correctTableData } from 'models/tableData'\nimport './style.scss'\n\nlet CorrectDataForm = ({\n  handleSubmit,\n  initialize,\n  initialData,\n  fieldName,\n}) => {\n  \n  useEffect(() => {\n    initialize(initialData)\n  }, [initialize, initialData])\n  \n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Field name={fieldName} defaultValue={initialData} component='textarea' type='text' className='table-input' />\n      </form>\n    </>\n  )\n}\n\nCorrectDataForm = reduxForm({\n  form: 'correctDataForm',\n  onSubmit: correctTableData,\n})(CorrectDataForm)\n\nexport default CorrectDataForm\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CorrectDataForm from '../CorrectDataForms/CorrectDataForm'\n// import RemoteSubmitButton from 'components/CorrectDataForms/RemoteSubmit'\nimport './reset.scss'\nimport './style.scss'\n\nexport const Table = ({\n  columns,\n  data,\n  handleSort,\n  checkboxHandle,\n  checkedItemIndexes,\n  // checkAllCheckboxes,\n  arrowId,\n  changeArrowId,\n  correctTableData,\n}) => {\n  \n  return(\n    <>\n    <table border=\"1\">\n      <thead>\n        <tr>\n          {columns.map((item, i) => {\n              return <th key={i}>\n                <SortButton\n                  arrowDisplayState={arrowId}\n                  field={item}\n                  onClick={() => {\n                    changeArrowId(item)\n                    arrowId ? handleSort(item, 1) : handleSort(item, -1)\n                  }}\n                />\n                {`${item}`}\n              </th>\n            }\n          )}\n        </tr>\n      </thead>\n      \n      <tbody>\n        {data && data.length ? data.map(\n          (item, i) => (\n            <tr key={i}>\n              {Object.keys(item).map((cell, key) => {\n                if (cell === 'isChecked') {\n                  return <td key={key}>\n                    <input id=\"checkbox\" checked={ checkedItemIndexes.includes(i) } type=\"checkbox\" onChange={() => checkboxHandle(i)}/>\n                    {/*{checkedItemIndexes.includes(i) ? <RemoteSubmitButton /> : null }*/}\n                  </td>\n                } else {\n                  return <td key={key}>{\n                    checkedItemIndexes.includes(i) && cell !== 'id' ? <CorrectDataForm fieldName={cell} initialData={data[i]} onSubmit={(data) => correctTableData(data)}  /> : item[cell]\n                  }</td>\n                }\n              })}\n            </tr>)\n        ) : null}\n      </tbody>\n    </table>\n    \n    {/*<div><RemoteSubmitButton /></div>*/}\n  </>\n  )\n}\n\nconst SortButton = ({\n  arrowDisplayState,\n  onClick,\n  field,\n  }) => {\n  return (\n    <span onClick={onClick}>{arrowDisplayState === field ? <>&#9650;</> : <>&#9660;</>}</span>\n  );\n}\n\nTable.propTypes = {\n  data: PropTypes.array,\n  handleSort: PropTypes.func,\n}\n\nTable.defaultProps = {\n  data: []\n}\n\nexport default Table","import { connect } from 'react-redux'\nimport { arrowIdSelector, changeArrowId } from 'models/tableView'\nimport { correctTableData } from 'models/tableData'\nimport { Table } from './Table'\n\nexport default connect(state => ({\n  arrowId: arrowIdSelector(state),\n  \n}), {\n  changeArrowId,\n  correctTableData,\n})(Table)","export function queryStringEditor(event, fieldName, history) {\n  const { value } = event.target\n  // const search = history.location.search\n  const search = window.location.search\n  const regexp = new RegExp(`(\\\\??&?${fieldName})=(\\\\w+)`)\n  const match = search.match(regexp)\n  let newSearch\n\n  if (value.length > 0) {\n    if (search.length > 0) {\n      if (match !== null) {\n        newSearch = search.replace(regexp, `$1=${value}`)\n        history.replace({ search: newSearch })\n      } else {\n        newSearch = `${search}&${fieldName}=${value}`\n        history.replace({ search: newSearch })\n      }\n    } else {\n      history.push({ search: `?${fieldName}=${value}` })\n    }\n  } else {\n    if (match[1].match(/\\?/)) {\n      const regexpForQuestion = RegExp(`(&?${fieldName})=(\\\\w+&?)`)\n      newSearch = search.replace(regexpForQuestion, '')\n      history.replace({ search: newSearch })\n    } else {\n      newSearch = search.replace(regexp, '')\n      history.replace({ search: newSearch })\n    }\n  }\n}\n\n","import React, { useEffect } from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { queryStringEditor } from 'shared/utils/queryStringEditor.js'\nimport './style.scss'\n\nconst inputs = ['name', 'class', 'author', 'version']\n\nlet AddNewDataForms = ({\n  handleSubmit,\n  initialize,\n  initialData,\n  history\n}) => {\n\n  // console.log('initData ' + JSON.stringify(initialData))\n  console.log(history)\n  \n  function searchParamMatch() {\n    const searchString = history.location.search\n    const match = inputs.filter(fieldName => searchString.includes(fieldName))\n    return match.length\n  }\n\n\n\n  useEffect(() => {\n    initialize(initialData)\n  }, [initialize, initialData])\n\n  return (\n    <>\n      {/* <form className='new-data-forms' onSubmit={handleSubmit}> */}\n      <form className='new-data-forms' onSubmit={handleSubmit}>\n        {inputs.map((item, key) =>\n          <div className='field' key={key}>\n            <Field name={item} component='input' type='text' placeholder={`enter ${item}`} onChange={(event) => queryStringEditor(event, item, history)} />\n          </div>)}\n        <button className='submit-button' type=\"submit\" disabled={!searchParamMatch()}>\n          Добавить\n        </button>\n      </form>\n    </>\n  )\n}\n\nAddNewDataForms = reduxForm({\n  form: 'addNewDataForm',\n})(AddNewDataForms)\n\nAddNewDataForms = connect(\n  state => ({\n    initialValues: state.router.location.query\n  })\n)(AddNewDataForms)\n\nAddNewDataForms = withRouter(AddNewDataForms)\n\nexport default AddNewDataForms","import React from 'react';\nimport { connect } from 'react-redux'\nimport { submit } from 'redux-form';\nimport { reduxCheckedIndexesSelector } from 'models/tableData'\nimport './style.scss'\nimport searchImg from 'shared/img/edit-text-svgrepo-com.svg'\n\nconst RemoteSubmitButton = ({ submit, reduxCheckedIndexes }) => (\n    <button className='correct-button' disabled={reduxCheckedIndexes.length < 1}    \n      type=\"button\"\n      onClick={() => submit('correctDataForm')}\n    >\n      <img src={searchImg} alt='поиск' />\n      <span>Редактировать</span>\n    </button>\n)\n\nexport default connect(\n  state => ({\n  reduxCheckedIndexes: reduxCheckedIndexesSelector(state),\n}), {\n  submit,\n})(RemoteSubmitButton)\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport './style.scss'\nimport searchImg from 'shared/img/search-svgrepo-com.svg'\nimport { queryStringEditor } from 'shared/utils/queryStringEditor.js'\n\nlet SearchField = ({ search, fixInitialTableData, history, initialValues }) => {\n\n  function changeHandler(event) {\n    fixInitialTableData()\n    search(event)\n    // const { value } = event.target\n\n    // if (value.length > 0) {\n    //   history.push({ search: `?search=${value}` })\n    // } else {\n    //   history.push({ search: '' })\n    // }\n    queryStringEditor(event, 'search', history)\n  }\n\n  return (\n    <div className='search-field'>\n      <img src={searchImg} alt='Поиск'/>\n      <span>Найти</span>\n      <Field name={'search'} component='input' type='text' onChange={(event) => changeHandler(event)} placeholder={'enter text'}/>\n    </div>\n  )\n}\n\nSearchField = reduxForm({\n  form: 'searchField',\n}, {\n})(SearchField)\n\nexport default SearchField\n\n\n// const useQuery = () => new URLSearchParams(useLocation().search)\n  // const setQuery = useQuery()\n\n    // setQuery.set('search', value)\n    // console.log(setQuery.get('search'))\n    // window.location.search = `?${value}`\n    // console.log(initialValues)\n\n\n  // useEffect(() => {\n  //   if (initialValues && initialValues.search) {\n  //     const event = { target: { value: initialValues.search } }\n  //     fixInitialTableData()\n  //     search(event)\n  //   }\n  // }, [initialValues","import { connect } from 'react-redux'\nimport {\n  search,\n  fixInitialTableData,\n} from 'models/tableData'\nimport { withRouter } from 'react-router'\nimport SearchField from './SearchField'\n\nlet SearchFieldContatiner = connect(state =>({\n  initialValues: state.router.location.query\n}), {\n  search,\n  fixInitialTableData,\n})(SearchField)\n\nSearchFieldContatiner = withRouter(SearchFieldContatiner)\n\nexport default SearchFieldContatiner","import React from 'react';\nimport './style.scss'\nimport deleteImage from 'shared/img/cross-svgrepo-com.svg';\n\nfunction DeleteButton({ reduxCheckedIndexes, deleteMarkedItem }) {\n  return (\n    <div>\n      <button className='delete-button' disabled={reduxCheckedIndexes.length < 1} onClick={() => deleteMarkedItem()}>\n        <img src={deleteImage} alt='Удалить' />\n        <span>Удалить</span>\n      </button>\n    </div>\n  )\n}\n\nexport default DeleteButton","import { connect } from 'react-redux'\nimport {  \n  reduxCheckedIndexesSelector,\n  deleteMarkedItem,\n} from 'models/tableData'\n\nimport DeleteButton from './DeleteButton.jsx'\n\nexport default connect(state=> ({\n  reduxCheckedIndexes: reduxCheckedIndexesSelector(state),\n}), {\n  deleteMarkedItem,\n})(DeleteButton)","import React from 'react';\nimport RemoteSubmit from \"components/CorrectDataForms/RemoteSubmit\";\nimport SearchFieldContatiner from \"components/searchField\";\nimport DeleteButton from 'components/deleteButton';\nimport './style.scss'\n\nfunction ControlPanel() {\n  return (\n    <div className='control-panel'>\n      <RemoteSubmit />\n      <SearchFieldContatiner />\n      <DeleteButton />\n    </div>\n  )\n}\n\nexport default ControlPanel","import React, { useEffect } from 'react';\nimport Table from 'components/table';\n// import Modal from 'shared/ui/Modal'\nimport AddNewDataForms from 'components/AddNewDataForms'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport ControlPanel from \"components/ControlPanel/ControlPanel\";\n\nimport 'reset.scss'\nimport 'App.scss'\n\nimport {\n  reduxTableDataSelector,\n  getReduxTableData,\n  sortReduxTable,\n  addNewTableData,\n  search,\n  reduxCheckedIndexesSelector,\n  setCheckedItemIndex,\n  setAllItemsCheked,\n  fixInitialTableData,\n  // correctTableData,\n} from './models/tableData'\n\n\n// const inputs = ['name', 'class', 'author', 'version']\nexport const tableColumns = ['id', 'name', 'class', 'author', 'current version', 'isChecked']\n\nfunction App({\n  reduxTableData,\n  getReduxTableData,\n  sortReduxTable,\n  addNewTableData,\n  reduxCheckedIndexes,\n  setCheckedItemIndex,\n  setAllItemsCheked,\n  search,\n  fixInitialTableData,\n  location,\n  // correctTableData,\n}) {\n\n  const searchParamValue = location.query.search\n\n  useEffect(() => {\n    getReduxTableData()\n    if (searchParamValue) {\n      const event = { target: { value: searchParamValue } }\n      fixInitialTableData()\n      search(event)\n    }\n\n  }, [getReduxTableData, fixInitialTableData, search, searchParamValue])\n\n\n  return (\n    <div className=\"App\">\n      <Link id='prog-languages' to='/table'>Языкы программирования</Link>\n      <Switch>\n        <Route path='/table'>\n          <AddNewDataForms initialData={location.query} onSubmit={(data) => addNewTableData(tableColumns, data)} />\n          <Table\n            data={reduxTableData}\n            columns={tableColumns}\n            checkboxHandle={setCheckedItemIndex}\n            checkedItemIndexes={reduxCheckedIndexes}\n            checkAllCheckboxes={setAllItemsCheked}\n            handleSort={sortReduxTable}\n          />\n          {/*<Modal*/}\n          {/*  disableEnforceFocus={true} // ???*/}\n          {/*  children={<div>Hello Moto</div>}*/}\n          {/*/>*/}\n          <ControlPanel className='control-panel'/>\n        </Route>\n        <Route exact path='/'>\n        </Route>\n        <Route path='*'>\n          Code 404<br />\n          Not found or doesn't exist :-(\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default connect(state => ({\n  reduxTableData: reduxTableDataSelector(state),\n  reduxCheckedIndexes: reduxCheckedIndexesSelector(state),\n  location: state.router.location,\n}), {\n  getReduxTableData,\n  sortReduxTable,\n  addNewTableData,\n  setCheckedItemIndex,\n  setAllItemsCheked,\n  fixInitialTableData,\n  search,\n})(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSelector } from 'reselect'\n\n// Constants\n\nexport const moduleName = 'app-form'\nconst prefix = moduleName\n\nexport const SET_INITIAL_FIELDS = `${prefix}/SET_INITIAL_FIELDS`\nexport const CHANGE_INPUTS = `${prefix}/CHANGE_INPUTS`\n\n// Reducer\n\nexport const ReducerRecord = {\n  reduxInputsData: [],\n}\n\nexport default function reducer(state = ReducerRecord, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_INITIAL_FIELDS:\n      return Object.assign({}, state, {\n        reduxInputsData: payload,\n      })\n    case CHANGE_INPUTS:\n      return Object.assign({}, state, {\n        reduxInputsData: payload,\n      })\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const stateSelector = state => state[moduleName]\nexport const reduxInputsDataSelector = createSelector(stateSelector, state => state.reduxInputsData)\n\n\n// Action creators\n\nexport function setInitialFields(inputs) {\n  console.log('setInitialFields')\n  return (dispatch) => {\n    dispatch({\n      type: SET_INITIAL_FIELDS,\n      payload: Object.fromEntries(inputs.map(inputName => [inputName, ''])),\n    })\n  }\n}\n\nexport function inputDataChange(event) {\n  return (dispatch, getState) => {\n    const { name, value } = event.target\n    const { reduxInputsData } = getState()[moduleName]\n\n    let previousInputsState = reduxInputsData\n    let newInputData = {\n      ...previousInputsState,\n      id: Math.trunc(Math.random() * 100),\n      [name]: value,\n      isChecked: false\n    }\n\n    const { id, ...rest } = newInputData\n\n    dispatch({\n      type: CHANGE_INPUTS,\n      payload: { id, ...rest },\n    })\n  }\n}\n\n","import { createBrowserHistory } from 'history'\n\nconst browserHistory = createBrowserHistory()\n\nexport default browserHistory","import {combineReducers} from 'redux'\nimport tableDataReducer, {moduleName as tabelDataModule} from '../models/tableData'\nimport formReducer, {moduleName as formModule} from '../shared/ui/forms/forms-model'\nimport tableViewReducer, {moduleName as tableViewModule} from '../models/tableView'\n\nimport { reducer as reduxFormReducer } from 'redux-form'\nimport { connectRouter } from 'connected-react-router'\nimport history from '../history'\n\nexport default combineReducers({\n  [tabelDataModule]: tableDataReducer,\n  [formModule]: formReducer,\n  [tableViewModule]: tableViewReducer,  \n  form: reduxFormReducer,\n  router: connectRouter(history),\n})","import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nimport { routerMiddleware } from 'connected-react-router'\nimport history from '../history'\n\nconst enhancer = applyMiddleware(thunk, routerMiddleware(history), logger)\nconst store = createStore(reducer, enhancer)\nwindow.store = store.getState()\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport { ConnectedRouter } from 'connected-react-router'\nimport history from './history'\n\nimport 'reset.scss'\nimport 'index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />,\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}